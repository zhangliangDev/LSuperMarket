<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.user.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.user.model.User" >
    <id column="obj_id" property="objId" jdbcType="VARCHAR" />
    <result column="comments" property="comments" jdbcType="VARCHAR" />
    <result column="loginname" property="loginname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="lastlogindate" property="lastlogindate" jdbcType="TIMESTAMP" />
    <result column="lastloginip" property="lastloginip" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    obj_id, comments, loginname, password, role_id, username, lastlogindate, lastloginip
  </sql>
  
   <select id="queryAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where obj_id = #{objId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where obj_id = #{objId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.user.model.User" >
    insert into user (obj_id, comments, loginname, 
      password, role_id, username, 
      lastlogindate, lastloginip)
    values (#{objId,jdbcType=VARCHAR}, #{comments,jdbcType=VARCHAR}, #{loginname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{lastlogindate,jdbcType=TIMESTAMP}, #{lastloginip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.user.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="objId != null" >
        obj_id,
      </if>
      <if test="comments != null" >
        comments,
      </if>
      <if test="loginname != null" >
        loginname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="lastlogindate != null" >
        lastlogindate,
      </if>
      <if test="lastloginip != null" >
        lastloginip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="objId != null" >
        #{objId,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="lastlogindate != null" >
        #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastloginip != null" >
        #{lastloginip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.user.model.User" >
    update user
    <set >
      <if test="comments != null" >
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="lastlogindate != null" >
        lastlogindate = #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastloginip != null" >
        lastloginip = #{lastloginip,jdbcType=VARCHAR},
      </if>
    </set>
    where obj_id = #{objId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.user.model.User" >
    update user
    set comments = #{comments,jdbcType=VARCHAR},
      loginname = #{loginname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      lastlogindate = #{lastlogindate,jdbcType=TIMESTAMP},
      lastloginip = #{lastloginip,jdbcType=VARCHAR}
    where obj_id = #{objId,jdbcType=VARCHAR}
  </update>
</mapper>